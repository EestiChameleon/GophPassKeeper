// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.5
// source: proto/gophkeeper.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// KeeperClient is the client API for Keeper service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type KeeperClient interface {
	RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserResponse, error)
	LoginUser(ctx context.Context, in *LoginUserRequest, opts ...grpc.CallOption) (*LoginUserResponse, error)
	GetPair(ctx context.Context, in *GetPairRequest, opts ...grpc.CallOption) (*GetPairResponse, error)
	PostPair(ctx context.Context, in *PostPairRequest, opts ...grpc.CallOption) (*PostPairResponse, error)
	DelPair(ctx context.Context, in *DelPairRequest, opts ...grpc.CallOption) (*DelPairResponse, error)
	GetText(ctx context.Context, in *GetTextRequest, opts ...grpc.CallOption) (*GetTextResponse, error)
	PostText(ctx context.Context, in *PostTextRequest, opts ...grpc.CallOption) (*PostTextResponse, error)
	DelText(ctx context.Context, in *DelTextRequest, opts ...grpc.CallOption) (*DelTextResponse, error)
	GetBin(ctx context.Context, in *GetBinRequest, opts ...grpc.CallOption) (*GetBinResponse, error)
	PostBin(ctx context.Context, in *PostBinRequest, opts ...grpc.CallOption) (*PostBinResponse, error)
	DelBin(ctx context.Context, in *DelBinRequest, opts ...grpc.CallOption) (*DelBinResponse, error)
	GetCard(ctx context.Context, in *GetCardRequest, opts ...grpc.CallOption) (*GetCardResponse, error)
	PostCard(ctx context.Context, in *PostCardRequest, opts ...grpc.CallOption) (*PostCardResponse, error)
	DelCard(ctx context.Context, in *DelCardRequest, opts ...grpc.CallOption) (*DelCardResponse, error)
	SyncVault(ctx context.Context, in *SyncVaultRequest, opts ...grpc.CallOption) (*SyncVaultResponse, error)
}

type keeperClient struct {
	cc grpc.ClientConnInterface
}

func NewKeeperClient(cc grpc.ClientConnInterface) KeeperClient {
	return &keeperClient{cc}
}

func (c *keeperClient) RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserResponse, error) {
	out := new(RegisterUserResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.proto.Keeper/RegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keeperClient) LoginUser(ctx context.Context, in *LoginUserRequest, opts ...grpc.CallOption) (*LoginUserResponse, error) {
	out := new(LoginUserResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.proto.Keeper/LoginUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keeperClient) GetPair(ctx context.Context, in *GetPairRequest, opts ...grpc.CallOption) (*GetPairResponse, error) {
	out := new(GetPairResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.proto.Keeper/GetPair", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keeperClient) PostPair(ctx context.Context, in *PostPairRequest, opts ...grpc.CallOption) (*PostPairResponse, error) {
	out := new(PostPairResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.proto.Keeper/PostPair", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keeperClient) DelPair(ctx context.Context, in *DelPairRequest, opts ...grpc.CallOption) (*DelPairResponse, error) {
	out := new(DelPairResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.proto.Keeper/DelPair", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keeperClient) GetText(ctx context.Context, in *GetTextRequest, opts ...grpc.CallOption) (*GetTextResponse, error) {
	out := new(GetTextResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.proto.Keeper/GetText", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keeperClient) PostText(ctx context.Context, in *PostTextRequest, opts ...grpc.CallOption) (*PostTextResponse, error) {
	out := new(PostTextResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.proto.Keeper/PostText", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keeperClient) DelText(ctx context.Context, in *DelTextRequest, opts ...grpc.CallOption) (*DelTextResponse, error) {
	out := new(DelTextResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.proto.Keeper/DelText", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keeperClient) GetBin(ctx context.Context, in *GetBinRequest, opts ...grpc.CallOption) (*GetBinResponse, error) {
	out := new(GetBinResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.proto.Keeper/GetBin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keeperClient) PostBin(ctx context.Context, in *PostBinRequest, opts ...grpc.CallOption) (*PostBinResponse, error) {
	out := new(PostBinResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.proto.Keeper/PostBin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keeperClient) DelBin(ctx context.Context, in *DelBinRequest, opts ...grpc.CallOption) (*DelBinResponse, error) {
	out := new(DelBinResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.proto.Keeper/DelBin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keeperClient) GetCard(ctx context.Context, in *GetCardRequest, opts ...grpc.CallOption) (*GetCardResponse, error) {
	out := new(GetCardResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.proto.Keeper/GetCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keeperClient) PostCard(ctx context.Context, in *PostCardRequest, opts ...grpc.CallOption) (*PostCardResponse, error) {
	out := new(PostCardResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.proto.Keeper/PostCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keeperClient) DelCard(ctx context.Context, in *DelCardRequest, opts ...grpc.CallOption) (*DelCardResponse, error) {
	out := new(DelCardResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.proto.Keeper/DelCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *keeperClient) SyncVault(ctx context.Context, in *SyncVaultRequest, opts ...grpc.CallOption) (*SyncVaultResponse, error) {
	out := new(SyncVaultResponse)
	err := c.cc.Invoke(ctx, "/gophkeeper.proto.Keeper/SyncVault", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KeeperServer is the server API for Keeper service.
// All implementations must embed UnimplementedKeeperServer
// for forward compatibility
type KeeperServer interface {
	RegisterUser(context.Context, *RegisterUserRequest) (*RegisterUserResponse, error)
	LoginUser(context.Context, *LoginUserRequest) (*LoginUserResponse, error)
	GetPair(context.Context, *GetPairRequest) (*GetPairResponse, error)
	PostPair(context.Context, *PostPairRequest) (*PostPairResponse, error)
	DelPair(context.Context, *DelPairRequest) (*DelPairResponse, error)
	GetText(context.Context, *GetTextRequest) (*GetTextResponse, error)
	PostText(context.Context, *PostTextRequest) (*PostTextResponse, error)
	DelText(context.Context, *DelTextRequest) (*DelTextResponse, error)
	GetBin(context.Context, *GetBinRequest) (*GetBinResponse, error)
	PostBin(context.Context, *PostBinRequest) (*PostBinResponse, error)
	DelBin(context.Context, *DelBinRequest) (*DelBinResponse, error)
	GetCard(context.Context, *GetCardRequest) (*GetCardResponse, error)
	PostCard(context.Context, *PostCardRequest) (*PostCardResponse, error)
	DelCard(context.Context, *DelCardRequest) (*DelCardResponse, error)
	SyncVault(context.Context, *SyncVaultRequest) (*SyncVaultResponse, error)
	mustEmbedUnimplementedKeeperServer()
}

// UnimplementedKeeperServer must be embedded to have forward compatible implementations.
type UnimplementedKeeperServer struct {
}

func (UnimplementedKeeperServer) RegisterUser(context.Context, *RegisterUserRequest) (*RegisterUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterUser not implemented")
}
func (UnimplementedKeeperServer) LoginUser(context.Context, *LoginUserRequest) (*LoginUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginUser not implemented")
}
func (UnimplementedKeeperServer) GetPair(context.Context, *GetPairRequest) (*GetPairResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPair not implemented")
}
func (UnimplementedKeeperServer) PostPair(context.Context, *PostPairRequest) (*PostPairResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostPair not implemented")
}
func (UnimplementedKeeperServer) DelPair(context.Context, *DelPairRequest) (*DelPairResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelPair not implemented")
}
func (UnimplementedKeeperServer) GetText(context.Context, *GetTextRequest) (*GetTextResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetText not implemented")
}
func (UnimplementedKeeperServer) PostText(context.Context, *PostTextRequest) (*PostTextResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostText not implemented")
}
func (UnimplementedKeeperServer) DelText(context.Context, *DelTextRequest) (*DelTextResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelText not implemented")
}
func (UnimplementedKeeperServer) GetBin(context.Context, *GetBinRequest) (*GetBinResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBin not implemented")
}
func (UnimplementedKeeperServer) PostBin(context.Context, *PostBinRequest) (*PostBinResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostBin not implemented")
}
func (UnimplementedKeeperServer) DelBin(context.Context, *DelBinRequest) (*DelBinResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelBin not implemented")
}
func (UnimplementedKeeperServer) GetCard(context.Context, *GetCardRequest) (*GetCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCard not implemented")
}
func (UnimplementedKeeperServer) PostCard(context.Context, *PostCardRequest) (*PostCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostCard not implemented")
}
func (UnimplementedKeeperServer) DelCard(context.Context, *DelCardRequest) (*DelCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelCard not implemented")
}
func (UnimplementedKeeperServer) SyncVault(context.Context, *SyncVaultRequest) (*SyncVaultResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncVault not implemented")
}
func (UnimplementedKeeperServer) mustEmbedUnimplementedKeeperServer() {}

// UnsafeKeeperServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to KeeperServer will
// result in compilation errors.
type UnsafeKeeperServer interface {
	mustEmbedUnimplementedKeeperServer()
}

func RegisterKeeperServer(s grpc.ServiceRegistrar, srv KeeperServer) {
	s.RegisterService(&Keeper_ServiceDesc, srv)
}

func _Keeper_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.proto.Keeper/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServer).RegisterUser(ctx, req.(*RegisterUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Keeper_LoginUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServer).LoginUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.proto.Keeper/LoginUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServer).LoginUser(ctx, req.(*LoginUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Keeper_GetPair_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPairRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServer).GetPair(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.proto.Keeper/GetPair",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServer).GetPair(ctx, req.(*GetPairRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Keeper_PostPair_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostPairRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServer).PostPair(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.proto.Keeper/PostPair",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServer).PostPair(ctx, req.(*PostPairRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Keeper_DelPair_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelPairRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServer).DelPair(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.proto.Keeper/DelPair",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServer).DelPair(ctx, req.(*DelPairRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Keeper_GetText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServer).GetText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.proto.Keeper/GetText",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServer).GetText(ctx, req.(*GetTextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Keeper_PostText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostTextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServer).PostText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.proto.Keeper/PostText",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServer).PostText(ctx, req.(*PostTextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Keeper_DelText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelTextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServer).DelText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.proto.Keeper/DelText",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServer).DelText(ctx, req.(*DelTextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Keeper_GetBin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServer).GetBin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.proto.Keeper/GetBin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServer).GetBin(ctx, req.(*GetBinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Keeper_PostBin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostBinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServer).PostBin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.proto.Keeper/PostBin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServer).PostBin(ctx, req.(*PostBinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Keeper_DelBin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelBinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServer).DelBin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.proto.Keeper/DelBin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServer).DelBin(ctx, req.(*DelBinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Keeper_GetCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServer).GetCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.proto.Keeper/GetCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServer).GetCard(ctx, req.(*GetCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Keeper_PostCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServer).PostCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.proto.Keeper/PostCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServer).PostCard(ctx, req.(*PostCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Keeper_DelCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServer).DelCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.proto.Keeper/DelCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServer).DelCard(ctx, req.(*DelCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Keeper_SyncVault_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncVaultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KeeperServer).SyncVault(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gophkeeper.proto.Keeper/SyncVault",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KeeperServer).SyncVault(ctx, req.(*SyncVaultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Keeper_ServiceDesc is the grpc.ServiceDesc for Keeper service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Keeper_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "gophkeeper.proto.Keeper",
	HandlerType: (*KeeperServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterUser",
			Handler:    _Keeper_RegisterUser_Handler,
		},
		{
			MethodName: "LoginUser",
			Handler:    _Keeper_LoginUser_Handler,
		},
		{
			MethodName: "GetPair",
			Handler:    _Keeper_GetPair_Handler,
		},
		{
			MethodName: "PostPair",
			Handler:    _Keeper_PostPair_Handler,
		},
		{
			MethodName: "DelPair",
			Handler:    _Keeper_DelPair_Handler,
		},
		{
			MethodName: "GetText",
			Handler:    _Keeper_GetText_Handler,
		},
		{
			MethodName: "PostText",
			Handler:    _Keeper_PostText_Handler,
		},
		{
			MethodName: "DelText",
			Handler:    _Keeper_DelText_Handler,
		},
		{
			MethodName: "GetBin",
			Handler:    _Keeper_GetBin_Handler,
		},
		{
			MethodName: "PostBin",
			Handler:    _Keeper_PostBin_Handler,
		},
		{
			MethodName: "DelBin",
			Handler:    _Keeper_DelBin_Handler,
		},
		{
			MethodName: "GetCard",
			Handler:    _Keeper_GetCard_Handler,
		},
		{
			MethodName: "PostCard",
			Handler:    _Keeper_PostCard_Handler,
		},
		{
			MethodName: "DelCard",
			Handler:    _Keeper_DelCard_Handler,
		},
		{
			MethodName: "SyncVault",
			Handler:    _Keeper_SyncVault_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/gophkeeper.proto",
}
